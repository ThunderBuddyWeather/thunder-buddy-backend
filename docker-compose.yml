---
services:
  db:
    image: postgres:15-alpine
    container_name: thunder-buddy-db
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      POSTGRES_DB: thunderbuddy
      POSTGRES_USER: thunderbuddy
      POSTGRES_PASSWORD: localdev
    ports:
      - "5432:5432"
    volumes:
      - thunder_buddy_postgres_15_new:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - thunder-buddy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thunderbuddy -d thunderbuddy"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: ${DOCKER_USERNAME:-thunderbuddy}/thunder-buddy:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thunder-buddy
    env_file:
      - ${ENV_FILE:-.env.local}
    ports:
      - "${HOST_PORT:-5000}:5000"
    environment:
      - DATABASE_URL=postgresql://thunderbuddy:localdev@db:5432/thunderbuddy
      - WEATHERBIT_API_KEY=${WEATHERBIT_API_KEY}
      - FLASK_DEBUG=true
      - FLASK_ENV=development
      - PYTHONPATH=/src
    volumes:
      - thunder_buddy_static:/app/static
      - .:/src
    working_dir: /src
    command: python main.py
    depends_on:
      db:
        condition: service_healthy
    networks:
      - thunder-buddy-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  thunder_buddy_postgres_15_new:
    name: thunder_buddy_postgres_15_new
  thunder_buddy_static:
    name: thunder_buddy_static

networks:
  thunder-buddy-network:
    name: thunder-buddy-network
