---
name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual triggering

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: thunder_buddy_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      CI: "true"
      TESTING: "true"
      FLASK_ENV: "testing"
      TEST_DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/thunder_buddy_test"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-mock

      - name: Run linting
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests
        run: |
          python -m pytest tests/unit/ -v

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: thunder_buddy_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      CI: "true"
      TESTING: "true"
      FLASK_ENV: "testing"
      TEST_DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/thunder_buddy_test"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install PyYAML==6.0.1  # Ensure PyYAML is installed
          pip install pytest pytest-cov pytest-mock

      - name: Run tests
        run: |
          python -m pytest tests/unit/ -v

      - name: Validate Swagger generation
        run: |
          # Create minimal .env.local for Swagger generation
          echo "FLASK_HOST=0.0.0.0" > .env.local
          echo "FLASK_PORT=5000" >> .env.local
          echo "FLASK_DEBUG=False" >> .env.local
          echo "WEATHERBIT_API_KEY=placeholder" >> .env.local
          echo "DB_HOST=localhost" >> .env.local
          echo "DB_PORT=5432" >> .env.local
          echo "DB_NAME=thunder_buddy_test" >> .env.local
          echo "DB_USERNAME=postgres" >> .env.local
          echo "DB_PASSWORD=postgres" >> .env.local

          # Run swagger generation to validate it works
          make swagger

          # Verify swagger.yaml was created
          test -f static/swagger.yaml || (echo "Swagger generation failed" && exit 1)

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/docker-build
        with:
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: thunder-buddy
          push: "false" # Don't push on PR builds
