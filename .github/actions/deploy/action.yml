name: 'Deploy Application'
description: 'Deploys application to EC2'

inputs:
  docker_username:
    required: true
    description: 'Docker Hub username for pulling the application image'
  db_username:
    required: true
    description: 'Username for PostgreSQL database authentication'
  db_password:
    required: true
    description: 'Password for PostgreSQL database authentication'
  db_name:
    required: true
    description: 'Name of the PostgreSQL database to use'
  weatherbit_api_key:
    required: true
    description: 'API key for accessing WeatherBit weather data service'

runs:
  using: "composite"
  steps:
    - name: Generate Compose File
      shell: bash
      run: |
        cat > compose.yaml << EOL
        services:
          db:
            image: postgres:15-alpine
            container_name: thunder-buddy-db
            environment:
              POSTGRES_DB: ${DB_NAME}
              POSTGRES_USER: ${DB_USERNAME}
              POSTGRES_PASSWORD: ${DB_PASSWORD}
            networks:
              - thunder-buddy-network
            healthcheck:
              test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
              interval: 5s
              timeout: 5s
              retries: 5
          
          app:
            image: ${{ inputs.docker_username }}/thunder-buddy:latest
            container_name: thunder-buddy
            ports:
              - "5000:5000"
            environment:
              DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}
              FLASK_DEBUG: "false"
              REQUEST_TIMEOUT: "30"
              WEATHERBIT_API_KEY: ${WEATHERBIT_API_KEY}
            depends_on:
              db:
                condition: service_healthy
            networks:
              - thunder-buddy-network
        
        networks:
          thunder-buddy-network:
            name: thunder-buddy-network
        EOL 